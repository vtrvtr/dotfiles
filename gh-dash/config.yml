prSections:
- title: My Pull Requests
  filters: is:open author:@me
  type: null
- title: Needs My Review
  filters: is:open review-requested:@me
  type: null
- title: Involved
  filters: is:open involves:@me -author:@me
  type: null
issuesSections:
- title: My Issues
  filters: is:open author:@me
- title: Assigned
  filters: is:open assignee:@me
- title: Involved
  filters: is:open involves:@me -author:@me
repo:
  branchesRefetchIntervalSeconds: 30
  prsRefetchIntervalSeconds: 60
defaults:
  preview:
    open: true
    width: 50
  prsLimit: 20
  issuesLimit: 20
  view: prs
  layout:
    prs:
      updatedAt:
        width: 5
      createdAt:
        width: 5
      repo:
        width: 20
      author:
        width: 15
      authorIcon:
        hidden: false
      assignees:
        width: 20
        hidden: true
      base:
        width: 15
        hidden: true
      lines:
        width: 15
    issues:
      updatedAt:
        width: 5
      createdAt:
        width: 5
      repo:
        width: 15
      creator:
        width: 10
      creatorIcon:
        hidden: false
      assignees:
        width: 20
        hidden: true
  refetchIntervalMinutes: 30
keybindings:
  universal: []
  issues: []
  prs: 
  - key: n 
    name: Clone and checkout
    command: >
      if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
        echo "Already inside a Git repository. Attempting to checkout branch: {{.HeadRefName}}" &&
        if ! git checkout "{{.HeadRefName}}"; then
          echo "Failed to checkout branch: {{.HeadRefName}}" && exit 1;
        fi &&
        exit 0;
      fi &&
      if [ -d "$(basename {{.RepoName}})" ]; then
        echo "Directory already exists: $(basename {{.RepoName}})" && exit 1;
      fi &&
      gh repo clone "{{.RepoName}}" &&
      cd "$(basename {{.RepoName}})" &&
      if ! git checkout "{{.HeadRefName}}"; then
        echo "Failed to checkout branch: {{.HeadRefName}}" && exit 1;
      fi &&
      if ! command -v jj >/dev/null 2>&1; then
        echo "Command 'jj' not found. Skipping 'jj git init --colocate'." && exit 0;
      fi &&
      jj git init --colocate
  branches: []
repoPaths: {}
theme:
  ui:
    sectionsShowCount: true
    table:
      showSeparator: true
      compact: false
pager:
  diff: ""
confirmQuit: false
showAuthorIcons: true
smartFilteringAtLaunch: true
