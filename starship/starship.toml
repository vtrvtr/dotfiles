# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

format = """
$time\
$singularity
${custom.jj}
$os\
$directory\
$python\
$rust\
$package\
${custom.rez}\
${env_var.furnace}\
${env_var.ws}\
${env_var.rez}\
$status
$character
"""

# Inserts a blank line between shell prompts
add_newline = false

# Replace the '❯' symbol in the prompt with '➜'
[character] # The name of the module we are configuring is 'character'
success_symbol = 'ℵ(bold green)' # The 'success_symbol' segment is being set to '➜' with the color 'bold green'

[singularity]
format = '[◌ּ \[$env\]]($style) '

[status]
symbol = '🔴'
success_symbol = '✓'
format = '[$symbol$common_meaning$signal_name$maybe_int]($style) '
map_symbol = true
disabled = false

[time]
disabled = false
format = '[$time]($style) '
time_format = '%B %d %Y'
utc_time_offset = '-7'
time_range = '10:00:00-14:00:00'

[aws]
symbol = "  "

[buf]
symbol = " "

[c]
symbol = " "

[cmake]
symbol = " "

[conda]
symbol = " "

[crystal]
symbol = " "

[dart]
symbol = " "

[directory]
disabled = false
read_only = " 󰌾"

[docker_context]
symbol = " "

[elixir]
symbol = " "

[elm]
symbol = " "

[fennel]
symbol = " "

[fossil_branch]
symbol = " "

[git_branch]
disabled = true
symbol = " "

[git_commit]
tag_symbol = '  '

[golang]
symbol = " "

[guix_shell]
symbol = " "

[haskell]
symbol = " "

[haxe]
symbol = " "

[hg_branch]
symbol = " "

[hostname]
ssh_symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[kotlin]
symbol = " "

[lua]
symbol = " "

[memory_usage]
symbol = "󰍛 "

[meson]
symbol = "󰔷 "

[nim]
symbol = "󰆥 "

[nix_shell]
symbol = " "

[nodejs]
symbol = " "

[ocaml]
symbol = " "

[os]
disabled = false

[os.symbols]
Alpaquita = " "
Alpine = " "
AlmaLinux = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CachyOS = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Kali = " "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
Nobara = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
RockyLinux = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Void = " "
Windows = "󰍲 "

[package]
symbol = "󰏗 "

[perl]
symbol = " "

[php]
symbol = " "

[pijul_channel]
symbol = " "

[python]
symbol = " "

[rlang]
symbol = "󰟔 "

[ruby]
symbol = " "

[rust]
symbol = "󱘗 "

[scala]
symbol = " "

[swift]
symbol = " "

[zig]
symbol = " "

[gradle]
symbol = " "

[env_var.furnace]
variable = "FURNACE_CONTEXT_NAME"
format = "$symbol [$env_value]($style) "
symbol = "🏭"
style = "red italic dimmed"
disabled = false

[env_var.ws]
variable = "WS_CONTEXT"
format = "$symbol [$env_value]($style) "
symbol = "🏢"
style = "blue italic dimmed"
disabled = false

[env_var.rez]
variable = "REZ_USED_VERSION"
format = "$symbol(white) [$env_value]($style) "
symbol = "ƕ"
style = "black bold dimmed"
disabled = false

[custom.rez]
command = "echo 🧰 $(rg --no-line-number -oP \"name =\\s*[\\\"']?\\K[^\\\"'\\n]+\" package.py)"
style = "red bold"
detect_files = ["package.py"]

# custom module for jj status
[custom.jj]
ignore_timeout = true
description = "The current jj status"
detect_folders = [".jj"]
symbol = "🥋 "
command = '''
jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, "💥"),
      if(divergent, "🚧"),
      if(hidden, "👻"),
      if(immutable, "🔒"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ if(description.first_line().len() == 0,
      "(no description set)",
      if(description.first_line().substr(0, 29) == description.first_line(),
        description.first_line(),
        description.first_line().substr(0, 29) ++ "…",
      )
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''


# re-enable git_branch as long as we're not in a jj repo
[custom.git_branch]
when = true
command = "jj root >/dev/null 2>&1 || starship module git_branch"
description = "Only show git_branch if we're not in a jj repo"
